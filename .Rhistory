geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,16))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1), range(0.5,1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1), range(0.5,1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1), range(0.5,1)) +
facet_wrap(year ~ .,
ncol = 10)
ggsave("jpg.jpg", dpi = 200, width = 2000, height = 2100, units = "px")
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-1), range(0.5,1), breaks = c(0, 1, 4, 8, 12, 16))
p
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), range(0.5,-1), breaks = c(0, 1, 4, 8, 12, 16))
p
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16)) +
scale_size_binned(
range = c(0, -1),
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
)
p
bs <- joined_spatial_df |> filter(year==1961)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16)) +
scale_size_binned(
range = c(0, -1),
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16)) +
scale_size_binned(
range = c(0.5, 1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16))
View(joined_spatial_df)
bs <- joined_spatial_df |> filter(year==1962)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16)) +
scale_size_binned(
range = c(0.5, 1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16))
bs <- joined_spatial_df |> filter(year==1961)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(0.5,-0.5), breaks = c(0, 1, 4, 8, 12, 16))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1), range(0.5,1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(16,-1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,3))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-0.5,0.5), breaks = c(0, 1, 4, 8, 12, 16))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5), breaks = c(0, 1, 4, 8, 12, 16))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = bs$n_days,  alpha = bs$n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,1))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_binned(
range = c(0.5, 1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_binned(
range = c(0, 1),
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5))
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_binned(
range = c(0.5, 1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_binned(
range = c(-0.5, 1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_binned(
range = c(0.5, -1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size(
range = c(0.5, -1),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size(
range = c(0.5, 16),
)
bs
View(bs)
bs <- joined_spatial_df |> filter(year==1962)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size(
range = c(0.5, 16),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size(
range = c(0, 2),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size(
range = c(1, 2),
)
ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_area(max_size = 6)
p <- gplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=bs, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_area(max_size = 16) +
facet_wrap(year ~ .,
ncol = 10)
ggsave("jpg.jpg", dpi = 200, width = 2000, height = 2100, units = "px")
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
scale_alpha_manual(values = c(-1,0.5)) +
scale_size_area(max_size = 16) +
facet_wrap(year ~ .,
ncol = 10)
ggsave("jpg.jpg", dpi = 200, width = 2000, height = 2100, units = "px")
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
# scale_alpha_manual(values = c(-1, 1)) +
# scale_size_binned_area(
#   trans = "identity",
#   breaks = c(0, 1, 4, 8, 12, 16),
#   max_size = 1
# ) +
scale_size_binned(
range = c(-1, 0),
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
)
p
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = n_days == 0), color="#E64415") +
# scale_alpha_manual(values = c(-1, 1)) +
# scale_size_binned_area(
#   trans = "identity",
#   breaks = c(0, 1, 4, 8, 12, 16),
#   max_size = 1
# ) +
scale_size_binned(
range = c(-1, 0),
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
) +
facet_wrap(year ~ .,
ncol = 10)
p
ggsave("germany_heating_up_jpg.jpg", dpi = 200, width = 2000, height = 2100, units = "px")
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = I(ifelse(n_days < 1, 0, 1))), color="#E64415") +
scale_size_binned(
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
range = c(0, 3.5),
)  +
facet_wrap(year ~ .,
ncol = 10) +
labs(title = "Germany is getting hotter",
subtitle = "Number of days above 35°C per year",
caption = "Data: BKK & DWD | Visualisation: @Datenschatz") +
guides(fill = guide_legend(keyheight = unit(1, units = "mm"),
keywidth = unit(3, units = "mm"),
direction = "horizontal",
nrow = 1,
ticks.colour = "white",
label.position = "bottom",
title.position = "bottom",
title.hjust = 0.5)) +
theme_void() +
theme(legend.direction="horizontal",
legend.position="bottom",
legend.justification = "left",
legend.box = "vertical",
legend.title = element_blank(),
text=element_text(family="Times New Roman"),
panel.spacing.y = unit(1, "lines"),
plot.background = element_rect(fill = 'white', colour = 'white'),
plot.subtitle = element_text(size=16,
vjust=1,
margin = margin(.3,0,.3,0, "cm"),
color="black"),
plot.title = element_text(size = 26,
face = "bold",
colour = '#000000',
margin = margin(.3,0,.5,0, "cm")),
strip.background = element_rect(fill= alpha('#ffffff', 0.05), colour = NA),
strip.text = element_text(size = 9,
face = "bold",
colour = '#000000',
margin = margin(.1,0,.1,0, "cm")),
plot.caption = element_text(size = 9,
colour = '#000000',
margin = margin(.5,0,.3,0, "cm")))
ggsave("sdd.jpg", dpi = 300, width = 900, height = 900, units = "px")
library(tidyverse)
library(glue)
library(terra)
library(sf)
library(scico)
library(hrbrthemes)
library(classInt)
library(rdwd)
library(purrr)
library(leaflet)
library(lubridate)
p <- ggplot(data = counties) +
geom_sf(fill = "white", colour = "grey50") +
geom_sf(data=joined_spatial_df, aes(size = n_days, alpha = I(ifelse(n_days < 1, 0, 1))), color="#E64415") +
scale_size_binned(
trans = "identity",
breaks = c(0, 1, 4, 8, 12, 16),
range = c(0, 3.5),
)  +
facet_wrap(year ~ .,
ncol = 10) +
labs(title = "Germany is getting hotter",
subtitle = "Number of days above 35°C per year",
caption = "Data: BKK & DWD | Visualisation: @Datenschatz") +
guides(fill = guide_legend(keyheight = unit(1, units = "mm"),
keywidth = unit(3, units = "mm"),
direction = "horizontal",
nrow = 1,
ticks.colour = "white",
label.position = "bottom",
title.position = "bottom",
title.hjust = 0.5)) +
theme_void() +
theme(legend.direction="horizontal",
legend.position="bottom",
legend.justification = "left",
legend.box = "vertical",
legend.title = element_blank(),
text=element_text(family="Times New Roman"),
panel.spacing.y = unit(1, "lines"),
plot.background = element_rect(fill = 'white', colour = 'white'),
plot.subtitle = element_text(size=16,
vjust=1,
margin = margin(.3,0,.3,0, "cm"),
color="black"),
plot.title = element_text(size = 26,
face = "bold",
colour = '#000000',
margin = margin(.3,0,.5,0, "cm")),
strip.background = element_rect(fill= alpha('#ffffff', 0.05), colour = NA),
strip.text = element_text(size = 9,
face = "bold",
colour = '#000000',
margin = margin(.1,0,.1,0, "cm")),
plot.caption = element_text(size = 9,
colour = '#000000',
margin = margin(.5,0,.3,0, "cm")))
ggsave("sdd.jpg", dpi = 300, width = 900, height = 900, units = "px")
library(tidyverse)
library(glue)
library(terra)
gc()
# download weather station list to decide from which station data to pull from
mydatapath <- "./data/"
header <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
n_max = 1)
weatherdata <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
locale = locale(encoding = "WINDOWS-1252"),
skip = 2)
colnames(weatherdata) <- header[1, ]
sixty_year_weather_data <- weatherdata |>
select(c(1:7)) |>
filter(von_datum <= as.numeric(19620101)) |>
filter(bis_datum >= as.numeric(20220815)) |>
mutate(Stations_id = as.integer(Stations_id))
View(weatherdata)
# Pull data from one weather station
save_one_weatherstation <- function(weatherstation_id) {
# get DWD download link by weatherstaion id
link <- selectDWD(id=toString(weatherstation_id), res="daily", var="kl", per="hist")
# Actually download that dataset, returning the local storage file name:
file <- dataDWD(link, read=FALSE)
# Read each weatherstation file from the zip folder and save as .rds into ./data/ folder
readDWD(file, varnames=TRUE) |>
select(c(STATIONS_ID, MESS_DATUM, TXK.Lufttemperatur_Max)) |>
saveRDS(file = glue('./data/', weatherstation_id, '.rds'))
}
# Use previously filtered weather station ids to pull data from each of them and save to data folder
# map(sixty_year_weather_data$Stations_id, save_one_weatherstation)
# Read in .rds files from ./data/ folder
combined_rds_files <- list.files( path = "./data/", pattern = "*.rds", full.names = TRUE ) %>%
map_dfr(readRDS)
filtered_data_by_timeframe <- combined_rds_files %>%
filter(MESS_DATUM >= "1961-01-01", MESS_DATUM <= "2022-08-15")
combined_rds_files <- list.files(path = "./data/", pattern = "*.rds", full.names = TRUE ) %>%
map_dfr(readRDS)
ggsave("anzahl_tage_pro_jahr_ueber_35_grassssd.jpg", dpi = 150, width = 1200, height = 1200, units = "px")
library(tidyverse)
library(glue)
library(terra)
library(sf)
library(scico)
library(hrbrthemes)
library(classInt)
library(rdwd)
library(purrr)
library(leaflet)
library(lubridate)
library(gganimate)
# prepare temperature data
# download weather station list to decide from which station data to pull from
mydatapath <- "./data/"
# opendata_dwd_path <- "https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/kl/recent/"
#
# download.file(paste0(opendata_dwd_path, "KL_Tageswerte_Beschreibung_Stationen.txt"),
#               paste0(mydatapath, "weatherstations.txt"))
header <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
n_max = 1)
weatherdata <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
locale = locale(encoding = "WINDOWS-1252"),
skip = 2)
colnames(weatherdata) <- header[1, ]
# Select only those stations that provide data between 1961 and 2021
sixty_year_weather_data <- weatherdata |>
select(c(1:7)) |>
filter(von_datum <= as.numeric(19620101)) |>
filter(bis_datum >= as.numeric(20220815)) |>
mutate(Stations_id = as.integer(Stations_id))
# Pull data from one weather station
save_one_weatherstation <- function(weatherstation_id) {
# get DWD download link by weatherstaion id
link <- selectDWD(id=toString(weatherstation_id), res="daily", var="kl", per="hist")
# Actually download that dataset, returning the local storage file name:
file <- dataDWD(link, read=FALSE)
# Read each weatherstation file from the zip folder and save as .rds into ./data/ folder
readDWD(file, varnames=TRUE) |>
select(c(STATIONS_ID, MESS_DATUM, TXK.Lufttemperatur_Max)) |>
saveRDS(file = glue('./data/', weatherstation_id, '.rds'))
}
# Use previously filtered weather station ids to pull data from each of them and save to data folder
# map(sixty_year_weather_data$Stations_id, save_one_weatherstation)
# Read in .rds files from ./data/ folder
combined_rds_files <- list.files(path = "./data/", pattern = "*.rds", full.names = TRUE ) %>%
map_dfr(readRDS)
# filter only those temperature per day values between 1961 and 2021
filtered_data_by_timeframe <- combined_rds_files %>%
filter(MESS_DATUM >= "1961-01-01", MESS_DATUM <= "2022-08-15")
# Select only those stations that provide data between 1961 and 2021
sixty_year_weather_data <- weatherdata |>
select(c(1:7)) |>
filter(von_datum <= as.numeric(19620101)) |>
filter(bis_datum >= as.numeric(20220815)) |>
mutate(Stations_id = as.integer(Stations_id))
View(weatherdata)
library(tidyverse)
library(glue)
library(terra)
library(sf)
library(scico)
library(hrbrthemes)
library(classInt)
library(rdwd)
library(purrr)
library(leaflet)
library(lubridate)
library(gganimate)
# prepare temperature data
# download weather station list to decide from which station data to pull from
mydatapath <- "./data/"
# opendata_dwd_path <- "https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/kl/recent/"
#
# download.file(paste0(opendata_dwd_path, "KL_Tageswerte_Beschreibung_Stationen.txt"),
#               paste0(mydatapath, "weatherstations.txt"))
header <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
n_max = 1)
weatherdata <- read_table(file = paste0(mydatapath, "weatherstations.txt"),
col_names = FALSE,
locale = locale(encoding = "WINDOWS-1252"),
skip = 2)
colnames(weatherdata) <- header[1, ]
# Select only those stations that provide data between 1961 and 2021
sixty_year_weather_data <- weatherdata |>
select(c(1:7)) |>
filter(von_datum <= as.numeric(19620101)) |>
filter(bis_datum >= as.numeric(20220815)) |>
mutate(Stations_id = as.integer(Stations_id))
# Pull data from one weather station
save_one_weatherstation <- function(weatherstation_id) {
# get DWD download link by weatherstaion id
link <- selectDWD(id=toString(weatherstation_id), res="daily", var="kl", per="hist")
# Actually download that dataset, returning the local storage file name:
file <- dataDWD(link, read=FALSE)
# Read each weatherstation file from the zip folder and save as .rds into ./data/ folder
readDWD(file, varnames=TRUE) |>
select(c(STATIONS_ID, MESS_DATUM, TXK.Lufttemperatur_Max)) |>
saveRDS(file = glue('./data/', weatherstation_id, '.rds'))
}
# Use previously filtered weather station ids to pull data from each of them and save to data folder
# map(sixty_year_weather_data$Stations_id, save_one_weatherstation)
# Read in .rds files from ./data/ folder
combined_rds_files <- list.files(path = "./data/", pattern = "*.rds", full.names = TRUE ) %>%
map_dfr(readRDS)
# filter only those temperature per day values between 1961 and 2021
filtered_data_by_timeframe <- combined_rds_files %>%
filter(MESS_DATUM >= "1961-01-01", MESS_DATUM <= "2022-08-15")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
source("~/Projekte/4) BLOG_IDEEN/climate_multiples/4_create_plot.R")
